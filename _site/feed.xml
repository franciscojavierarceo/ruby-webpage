<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>francisco javier arceo</title>
    <description></description>
    <link>http://franciscojavierarceo.github.io/</link>
    <atom:link href="http://franciscojavierarceo.github.io/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Wed, 11 Nov 2015 07:56:15 -0500</pubDate>
    <lastBuildDate>Wed, 11 Nov 2015 07:56:15 -0500</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>My first post</title>
        <description>&lt;h1&gt;Jekyll pages, Python, and learning to work with GitHub&lt;/h1&gt;

&lt;p&gt;I recently began working with GitHub and learning the ways of the codes. &lt;em&gt;It&amp;#39;s amazing.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;GitHub is a great way to version your code, especially when working with groups, to ensure 
recovery and quality. GitHub Markdown (formatted) pages are really great because of the ease and intuitive behavior.&lt;/p&gt;

&lt;h2&gt;Things I hope to accomplish in this blog:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Write about Machine Learning topics that I find interesting&lt;/li&gt;
&lt;li&gt;Provide an &amp;quot;economist&amp;#39;s&amp;quot; introduction to hacking/data science&lt;/li&gt;
&lt;li&gt;Provide more clear insight on what some of the fancy machine learning algorithms do.&lt;/li&gt;
&lt;li&gt;Provide an overview of some simple NLP methods&lt;/li&gt;
&lt;li&gt;Give my personal opinions about various tools/pieces of software&lt;/li&gt;
&lt;li&gt;Create cool visualizations of data

&lt;ul&gt;
&lt;li&gt;Maybe I&amp;#39;ll even offer a tutorial&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2&gt;Python Code&lt;/h2&gt;

&lt;p&gt;This is what some code looks like in a nice format.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;def Build_STDM(docs, **kwargs):
    &amp;#39;&amp;#39;&amp;#39; Build Spares Term Document Matrix &amp;#39;&amp;#39;&amp;#39;
    from sklearn.feature_extraction.text import CountVectorizer
    import pandas as pd
    vectorizer = CountVectorizer(**kwargs)
    sparsematrix= vectorizer.fit_transform(docs)
    vocab = vectorizer.vocabulary_.keys()
    return sparsematrix, vocab

# Call the function on e-mail messages. The token_pattern is set so that terms are only
# words with two or more letters (no numbers or punctuation)
xs, vocab = Build_STDM(varchar)
print xs[:,1:10]
print vocab[0:10]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        <pubDate>Thu, 05 Mar 2015 00:00:00 -0500</pubDate>
        <link>http://franciscojavierarceo.github.io/2015/03/05/First-Post</link>
        <guid isPermaLink="true">http://franciscojavierarceo.github.io/2015/03/05/First-Post</guid>
      </item>
    
  </channel>
</rss>
